From 7987fe7a3301ad477e9fd31bf1d1d7e44b6d28ca Mon Sep 17 00:00:00 2001
From: Steve Kondik <steve@cyngn.com>
Date: Mon, 12 Oct 2015 12:49:32 -1000
Subject: [PATCH] tinycompress: Fix compilation on old targets

 * Exclude code for codec-specific data if kernel support is missing.

Change-Id: I088e0244b01b01f21b80d9478407a185c34afbe8
Signed-off-by: Satish Patel <tosatishpatel@gmail.com>
---
 compress.c                          | 51 +++++++++++++++++++++++++++++
 include/tinycompress/tinycompress.h | 21 ++++++++++++
 2 files changed, 72 insertions(+)

diff --git a/compress.c b/compress.c
index d1a2283..1cdf297 100644
--- a/compress.c
+++ b/compress.c
@@ -572,6 +572,25 @@ int compress_set_gapless_metadata(struct compress *compress,
 	return 0;
 }
 
+#if defined(SNDRV_COMPRESS_SET_NEXT_TRACK_PARAM)
+int compress_set_next_track_param(struct compress *compress,
+	union snd_codec_options *codec_options)
+{
+	if (!is_compress_running(compress))
+		return oops(compress, ENODEV, "device not ready");
+
+	if (ioctl(compress->fd, SNDRV_COMPRESS_SET_NEXT_TRACK_PARAM, codec_options))
+		return oops(compress, errno, "cannot set next track params\n");
+	return 0;
+}
+#else
+int compress_set_next_track_param(struct compress *compress __unused,
+	union snd_codec_options *codec_options __unused)
+{
+	return 0;
+}
+#endif
+
 bool is_codec_supported(unsigned int card, unsigned int device,
 		unsigned int flags, struct snd_codec *codec)
 {
@@ -630,3 +649,35 @@ int compress_wait(struct compress *compress, int timeout_ms)
 	return oops(compress, EIO, "poll signalled unhandled event");
 }
 
+int compress_get_metadata(struct compress *compress,
+		struct snd_compr_metadata *mdata) {
+	int version;
+	if (!is_compress_ready(compress))
+		return oops(compress, ENODEV, "device not ready");
+
+	version = get_compress_version(compress);
+	if (version <= 0)
+		return -1;
+
+	if (ioctl(compress->fd, SNDRV_COMPRESS_GET_METADATA, mdata)) {
+		return oops(compress, errno, "can't get metadata for stream\n");
+	}
+	return 0;
+}
+
+int compress_set_metadata(struct compress *compress,
+		struct snd_compr_metadata *mdata) {
+
+	int version;
+	if (!is_compress_ready(compress))
+		return oops(compress, ENODEV, "device not ready");
+
+	version = get_compress_version(compress);
+	if (version <= 0)
+		return -1;
+
+	if (ioctl(compress->fd, SNDRV_COMPRESS_SET_METADATA, mdata)) {
+		return oops(compress, errno, "can't set metadata for stream\n");
+	}
+	return 0;
+}
diff --git a/include/tinycompress/tinycompress.h b/include/tinycompress/tinycompress.h
index 9f95b87..f88c2a2 100644
--- a/include/tinycompress/tinycompress.h
+++ b/include/tinycompress/tinycompress.h
@@ -81,6 +81,8 @@ struct compr_gapless_mdata {
 
 struct compress;
 struct snd_compr_tstamp;
+union snd_codec_options;
+struct snd_compr_metadata;
 
 /*
  * compress_open: open a new compress stream
@@ -235,6 +237,18 @@ int compress_partial_drain(struct compress *compress);
 int compress_set_gapless_metadata(struct compress *compress,
 			struct compr_gapless_mdata *mdata);
 
+/*
+ * compress_set_next_track_param: set params of next compress stream in gapless
+ *
+ * return 0 on success, negative on error
+ *
+ * @compress: compress stream for which codec options has to be set
+ * @codec_options: codec options of compress stream based on codec type
+ */
+
+int compress_set_next_track_param(struct compress *compress,
+			union snd_codec_options *codec_options);
+
 /*
  * is_codec_supported:check if the given codec is supported
  * returns true when supported, false if not
@@ -291,6 +305,13 @@ const char *compress_get_error(struct compress *compress);
 /* utility functions */
 unsigned int compress_get_alsa_rate(unsigned int rate);
 
+/* set metadata */
+int compress_set_metadata(struct compress *compress,
+	    struct snd_compr_metadata *mdata);
+
+/* get metadata */
+int compress_get_metadata(struct compress *compress,
+	    struct snd_compr_metadata *mdata);
 
 #if defined(__cplusplus)
 }
-- 
2.17.1

