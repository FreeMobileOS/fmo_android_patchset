From 12f67b6a2837a52fcf6b400273519d1355c760b7 Mon Sep 17 00:00:00 2001
From: Anay Wadhera <anay1018@gmail.com>
Date: Thu, 14 Mar 2019 17:07:49 -0400
Subject: [PATCH] msm8974: adjust for clang on Q

Change-Id: I335f18ec303f166ec9519a8a9c17ca51e24b0b84
Signed-off-by: Satish Patel <tosatishpatel@gmail.com>
---
 msm8974/mm-video-v4l2/vidc/vdec.mk            |  2 ++
 .../mm-video-v4l2/vidc/vdec/inc/mp4_utils.h   | 27 +++----------------
 2 files changed, 5 insertions(+), 24 deletions(-)
 mode change 100755 => 100644 msm8974/mm-video-v4l2/vidc/vdec/inc/mp4_utils.h

diff --git a/msm8974/mm-video-v4l2/vidc/vdec.mk b/msm8974/mm-video-v4l2/vidc/vdec.mk
index c53cc7ad..082315e4 100644
--- a/msm8974/mm-video-v4l2/vidc/vdec.mk
+++ b/msm8974/mm-video-v4l2/vidc/vdec.mk
@@ -111,9 +111,11 @@ libmm-vdec-inc      += frameworks/av/include/media/stagefright
 
 LOCAL_MODULE                    := libOmxVdec
 LOCAL_MODULE_TAGS               := optional
+LOCAL_PROPRIETARY_MODULE        := true
 LOCAL_CFLAGS                    := $(libOmxVdec-def)
 LOCAL_C_INCLUDES                += $(libmm-vdec-inc)
 
+LOCAL_PRELINK_MODULE    := false
 LOCAL_SHARED_LIBRARIES  := liblog libutils libui libbinder libcutils libdl
 
 LOCAL_SHARED_LIBRARIES  += libdivxdrmdecrypt
diff --git a/msm8974/mm-video-v4l2/vidc/vdec/inc/mp4_utils.h b/msm8974/mm-video-v4l2/vidc/vdec/inc/mp4_utils.h
old mode 100755
new mode 100644
index 93c04e75..0cba77c2
--- a/msm8974/mm-video-v4l2/vidc/vdec/inc/mp4_utils.h
+++ b/msm8974/mm-video-v4l2/vidc/vdec/inc/mp4_utils.h
@@ -1,6 +1,5 @@
 /*--------------------------------------------------------------------------
 Copyright (c) 2010 - 2013, The Linux Foundation. All rights reserved.
-
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
     * Redistributions of source code must retain the above copyright
@@ -12,7 +11,6 @@ modification, are permitted provided that the following conditions are met:
       the names of its contributors may be used to endorse or promote
       products derived from this software without specific prior written
       permission.
-
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
@@ -33,12 +31,10 @@ typedef signed long long int64;
 typedef unsigned int uint32;   /* Unsigned 32 bit value */
 typedef unsigned short uint16;   /* Unsigned 16 bit value */
 typedef unsigned char uint8;   /* Unsigned 8  bit value */
-
 typedef int int32;   /* Signed 32 bit value */
 typedef signed short int16;   /* Signed 16 bit value */
 typedef signed char int8;   /* Signed 8  bit value */
-
-typedef unsigned char byte;   /* Unsigned 8  bit value type. */
+typedef unsigned char _byte;   /* Unsigned 8  bit value type. */
 #define SIMPLE_PROFILE_LEVEL0            0x08
 #define SIMPLE_PROFILE_LEVEL1            0x01
 #define SIMPLE_PROFILE_LEVEL2            0x02
@@ -47,11 +43,9 @@ typedef unsigned char byte;   /* Unsigned 8  bit value type. */
 #define SIMPLE_PROFILE_LEVEL5            0x05
 #define SIMPLE_PROFILE_LEVEL6            0x06
 #define SIMPLE_PROFILE_LEVEL0B           0x09
-
 #define SIMPLE_SCALABLE_PROFILE_LEVEL0                  0x10
 #define SIMPLE_SCALABLE_PROFILE_LEVEL1                  0x11
 #define SIMPLE_SCALABLE_PROFILE_LEVEL2                  0x12
-
 #define SIMPLE_SCALABLE_PROFILE_LEVEL0  0x10
 #define SIMPLE_SCALABLE_PROFILE_LEVEL1  0x11
 #define SIMPLE_SCALABLE_PROFILE_LEVEL2  0x12
@@ -61,10 +55,8 @@ typedef unsigned char byte;   /* Unsigned 8  bit value type. */
 #define ADVANCED_SIMPLE_PROFILE_LEVEL3  0xF3
 #define ADVANCED_SIMPLE_PROFILE_LEVEL4  0xF4
 #define ADVANCED_SIMPLE_PROFILE_LEVEL5  0xF5
-
 #define VISUAL_OBJECT_SEQUENCE_START_CODE   0x000001B0
 #define MP4ERROR_SUCCESS     0
-
 #define VIDEO_OBJECT_LAYER_START_CODE_MASK  0xFFFFFFF0
 #define VIDEO_OBJECT_LAYER_START_CODE       0x00000120
 #define VOP_START_CODE_MASK                 0xFFFFFFFF
@@ -85,7 +77,6 @@ typedef unsigned char byte;   /* Unsigned 8  bit value type. */
 #define VISUAL_OBJECT_START_CODE            0x000001B5
 #define VIDEO_OBJECT_START_CODE_MASK        0xFFFFFFE0
 #define VIDEO_OBJECT_START_CODE             0x00000100
-
 #define RESERVED_OBJECT_TYPE                0x0
 #define SIMPLE_OBJECT_TYPE                  0x1
 #define SIMPLE_SCALABLE_OBJECT_TYPE         0x2
@@ -95,41 +86,32 @@ typedef unsigned char byte;   /* Unsigned 8  bit value type. */
 #define BASIC_ANIMATED_2D_TEXTURE           0x6
 #define ANIMATED_2D_MESH                    0x7
 #define ADVANCED_SIMPLE                     0x11
-
-
 #define SIMPLE_L1_MAX_VBVBUFFERSIZE 10  /* VBV Max Buffer size=10 (p. 498)  */
 #define SIMPLE_L1_MAX_BITRATE       160 /* is is 64kpbs or 160 400bits/sec units */
 #define SIMPLE_L2_MAX_VBVBUFFERSIZE 40  /* VBV Max Buffer size = 40 */
 #define SIMPLE_L2_MAX_BITRATE       320 /* 320 400bps units = 128kpbs */
 #define SIMPLE_L3_MAX_VBVBUFFERSIZE 40  /* VBV Max Buffer size = 40 */
 #define SIMPLE_L3_MAX_BITRATE       960 /* 960 400bps units = 384kpbs */
-
 /* The MP4 decoder currently supports Simple Profile@L3 */
 #define MAX_VBVBUFFERSIZE (SIMPLE_L3_MAX_VBVBUFFERSIZE)
 #define MAX_BITRATE       (SIMPLE_L3_MAX_BITRATE)
-
 #define MAX_QUANTPRECISION 9
 #define MIN_QUANTPRECISION 3
-
 #define MP4_VGA_WIDTH             640
 #define MP4_VGA_HEIGHT            480
 #define MP4_WVGA_WIDTH            800
 #define MP4_WVGA_HEIGHT           480
 #define MP4_720P_WIDTH            1280
 #define MP4_720P_HEIGHT           720
-
 #define MP4_MAX_DECODE_WIDTH    MP4_720P_WIDTH
 #define MP4_MAX_DECODE_HEIGHT   MP4_720P_HEIGHT
-
 typedef struct {
     unsigned char *data;
     unsigned long int numBytes;
 } mp4StreamType;
-
 #define MAX_FRAMES_IN_CHUNK                 10
 #define VOP_START_CODE                      0x000001B6
 #define VOL_START_CODE                      0x000001B0
-
 typedef enum VOPTYPE {
     NO_VOP = -1, // bitstream contains no VOP.
     MPEG4_I_VOP = 0,   // bitstream contains an MPEG4 I-VOP
@@ -137,14 +119,12 @@ typedef enum VOPTYPE {
     MPEG4_B_VOP = 2,   // bitstream contains an MPEG4 B-VOP
     MPEG4_S_VOP = 3,   // bitstream contains an MPEG4 S-VOP
 } VOP_TYPE;
-
 typedef struct {
     uint32    timestamp_increment;
     uint32    offset;
     uint32    size;
     VOP_TYPE  vopType;
 } mp4_frame_info_type;
-
 class MP4_Utils
 {
     private:
@@ -152,9 +132,8 @@ class MP4_Utils
             uint8 *bytePtr;
             uint8 bitPos;
         };
-
         posInfoType m_posInfo;
-        byte *m_dataBeginPtr;
+        _byte *m_dataBeginPtr;
         unsigned int vop_time_resolution;
         bool vop_time_found;
         uint16 m_SrcWidth, m_SrcHeight;   // Dimensions of the source clip
@@ -166,4 +145,4 @@ class MP4_Utils
         static uint32 read_bit_field(posInfoType * posPtr, uint32 size);
         bool is_notcodec_vop(unsigned char *pbuffer, unsigned int len);
 };
-#endif
+#endif
\ No newline at end of file
-- 
2.17.1

